{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/react/my-app/src/bootstrap.js\";\nimport React, { Component } from 'react';\n\nclass ThemeSwitcher extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      theme: null,\n      username: \"\",\n      password: \"\",\n      sex: \"male\",\n      jsonData: \"\"\n    };\n\n    this.resetTheme = evt => {\n      evt.preventDefault();\n      this.setState({\n        theme: null\n      });\n    };\n\n    this.chooseTheme = (theme, evt) => {\n      evt.preventDefault();\n      this.setState({\n        theme\n      });\n    };\n\n    this.selectSex = e => {\n      this.setState({\n        sex: e.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log('Get Json');\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\").then(res => res.json()).then(json => json.title).then(jsonData => {\n      this.setState({\n        jsonData: jsonData\n      });\n    });\n  }\n\n  render() {\n    const theme = this.state.theme;\n    const themeClass = theme ? theme.toLowerCase() : 'secondary';\n    return React.createElement(\"div\", {\n      className: \"d-flex flex-wrap justify-content-center position-absolute w-100 h-100 align-items-center align-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"rainbow-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"xxxShow JSON : \", this.state.jsonData), React.createElement(\"a\", {\n      href: \"www.google.co.th\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"GOOGLE\"));\n  }\n\n}\n\nexport default ThemeSwitcher;","map":{"version":3,"sources":["/Users/admin/Desktop/react/my-app/src/bootstrap.js"],"names":["React","Component","ThemeSwitcher","state","theme","username","password","sex","jsonData","resetTheme","evt","preventDefault","setState","chooseTheme","selectSex","e","target","value","componentDidMount","console","log","fetch","then","res","json","title","render","themeClass","toLowerCase"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAEpCE,KAFoC,GAE5B;AACNC,MAAAA,KAAK,EAAE,IADD;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,GAAG,EAAE,MAJC;AAKNC,MAAAA,QAAQ,EAAE;AALJ,KAF4B;;AAAA,SAqBpCC,UArBoC,GAqBvBC,GAAG,IAAI;AAClBA,MAAAA,GAAG,CAACC,cAAJ;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KAxBmC;;AAAA,SA0BpCS,WA1BoC,GA0BtB,CAACT,KAAD,EAAQM,GAAR,KAAgB;AAC5BA,MAAAA,GAAG,CAACC,cAAJ;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;AACD,KA7BmC;;AAAA,SA+BpCU,SA/BoC,GA+BvBC,CAAD,IAAO;AACjB,WAAKH,QAAL,CAAc;AAAEL,QAAAA,GAAG,EAAEQ,CAAC,CAACC,MAAF,CAASC;AAAhB,OAAd;AACD,KAjCmC;AAAA;;AAUpCC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEAC,IAAAA,KAAK,CAAC,8CAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQE,IAAI,IAAIA,IAAI,CAACC,KAFrB,EAGGH,IAHH,CAGSd,QAAD,IAAc;AAClB,WAAKI,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAEA;AAAZ,OAAd;AACD,KALH;AAMD;;AAgBDkB,EAAAA,MAAM,GAAG;AAAA,UAECtB,KAFD,GAEW,KAAKD,KAFhB,CAECC,KAFD;AAGP,UAAMuB,UAAU,GAAGvB,KAAK,GAAGA,KAAK,CAACwB,WAAN,EAAH,GAAyB,WAAjD;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,+GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAiD,KAAKzB,KAAL,CAAWK,QAA5D,CADF,EAEE;AAAG,MAAA,IAAI,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAOD;;AA/CmC;;AAmDtC,eAAeN,aAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass ThemeSwitcher extends Component {\n\n  state = {\n    theme: null,\n    username: \"\",\n    password: \"\",\n    sex: \"male\",\n    jsonData: \"\"\n  }\n\n  componentDidMount() {\n    console.log('Get Json');\n\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\n      .then(res => res.json())\n      .then(json => json.title)\n      .then((jsonData) => {\n        this.setState({ jsonData: jsonData })\n      })\n  }\n\n  resetTheme = evt => {\n    evt.preventDefault();\n    this.setState({ theme: null });\n  }\n\n  chooseTheme = (theme, evt) => {\n    evt.preventDefault();\n    this.setState({ theme });\n  }\n\n  selectSex = (e) => {\n    this.setState({ sex: e.target.value })\n  }\n\n  render() {\n\n    const { theme } = this.state;\n    const themeClass = theme ? theme.toLowerCase() : 'secondary';\n\n    return (\n      <div className=\"d-flex flex-wrap justify-content-center position-absolute w-100 h-100 align-items-center align-content-center\">\n        <legend className=\"rainbow-text\">xxxShow JSON : {this.state.jsonData}</legend>\n        <a href=\"www.google.co.th\">GOOGLE</a>\n        </div>\n    );\n\n  }\n\n}\n\nexport default ThemeSwitcher;"]},"metadata":{},"sourceType":"module"}
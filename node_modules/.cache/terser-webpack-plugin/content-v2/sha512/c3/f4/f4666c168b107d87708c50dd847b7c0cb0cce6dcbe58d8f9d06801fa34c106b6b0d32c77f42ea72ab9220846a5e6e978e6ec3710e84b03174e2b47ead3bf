{"map":"{\"version\":3,\"sources\":[\"/Users/admin/Desktop/react/src/bootstrap.js\",\"/Users/admin/Desktop/react/src/serviceWorker.js\",\"/Users/admin/Desktop/react/src/index.js\"],\"names\":[\"ThemeSwitcher\",\"state\",\"theme\",\"username\",\"password\",\"sex\",\"jsonData\",\"resetTheme\",\"evt\",\"preventDefault\",\"_this\",\"setState\",\"chooseTheme\",\"selectSex\",\"e\",\"target\",\"value\",\"_this2\",\"this\",\"console\",\"log\",\"fetch\",\"then\",\"res\",\"json\",\"title\",\"_this3\",\"themeClass\",\"toLowerCase\",\"react_default\",\"a\",\"createElement\",\"className\",\"href\",\"class\",\"action\",\"onSubmit\",\"alert\",\"JSON\",\"stringify\",\"for\",\"onChange\",\"type\",\"id\",\"required\",\"concat\",\"data-toggle\",\"aria-haspopup\",\"aria-expanded\",\"onClick\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"bootstrap\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from 'react';\\n\\nclass ThemeSwitcher extends Component {\\n\\n  state = {\\n    theme: null,\\n    username: \\\"\\\",\\n    password: \\\"\\\",\\n    sex: \\\"male\\\",\\n    jsonData: \\\"\\\"\\n  }\\n\\n  componentDidMount() {\\n    console.log('Get Json');\\n\\n    fetch(\\\"https://jsonplaceholder.typicode.com/todos/1\\\")\\n      .then(res => res.json())\\n      .then(json => json.title)\\n      .then((jsonData) => {\\n        this.setState({ jsonData: jsonData })\\n      })\\n  }\\n\\n  resetTheme = evt => {\\n    evt.preventDefault();\\n    this.setState({ theme: null });\\n  }\\n\\n  chooseTheme = (theme, evt) => {\\n    evt.preventDefault();\\n    this.setState({ theme });\\n  }\\n\\n  selectSex = (e) => {\\n    this.setState({ sex: e.target.value })\\n  }\\n\\n  render() {\\n\\n    const { theme } = this.state;\\n    const themeClass = theme ? theme.toLowerCase() : 'secondary';\\n\\n    return (\\n      <div className=\\\"d-flex flex-wrap justify-content-center position-absolute w-100 h-100 align-items-center align-content-center\\\">\\n        <legend className=\\\"rainbow-text\\\">xxxShow JSON : {this.state.jsonData}</legend>\\n        <a href=\\\"www.google.co.th\\\">Google</a>\\n        <div class=\\\"container\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n              <form action=\\\"#\\\" onSubmit={() => alert(JSON.stringify(this.state))}>\\n              \\n                <legend>Login</legend>\\n                {/* Comment */}\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"\\\">Username</label>\\n                  <input\\n                    onChange={e => {\\n                      this.setState({\\n                        username: e.target.value\\n                      })\\n                    }}\\n                    value={this.state.username}\\n                    type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" required />\\n                </div>\\n\\n                {/* Password */}\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"\\\">Password</label>\\n                  <input\\n                    onChange={e => {\\n                      this.setState({ password: e.target.value })\\n                    }}\\n                    value={this.state.password}\\n                    type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" required />\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label>Sex</label>\\n                  <select\\n                    onChange={this.selectSex}\\n                    id=\\\"sex\\\" class=\\\"form-control\\\" required=\\\"required\\\">\\n                    <option value=\\\"male\\\">Male</option>\\n                    <option value=\\\"female\\\">Female</option>\\n                  </select>\\n                </div>\\n\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Login</button>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n\\n\\n        <span className={`h1 mb-4 w-100 text-center text-${themeClass}`}>{theme || 'Default'}</span>\\n\\n        <div className=\\\"btn-group\\\">\\n\\n          <button type=\\\"button\\\" className={`btn btn-${themeClass} btn-lg`}>{theme || 'Choose'} Theme</button>\\n\\n          <button type=\\\"button\\\" className={`btn btn-${themeClass} btn-lg dropdown-toggle dropdown-toggle-split`} data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            <span className=\\\"sr-only\\\">Toggle Theme Dropdown</span>\\n          </button>\\n\\n          <div className=\\\"dropdown-menu\\\">\\n\\n            <a className=\\\"dropdown-item\\\" href=\\\"#\\\" onClick={e => this.chooseTheme('Primary', e)}>Primary Theme</a>\\n            <a className=\\\"dropdown-item\\\" href=\\\"#\\\" onClick={e => this.chooseTheme('Danger', e)}>Danger Theme</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\" onClick={e => this.chooseTheme('Success', e)}>Success Theme</a>\\n\\n            <div className=\\\"dropdown-divider\\\"></div>\\n\\n            <a className=\\\"dropdown-item\\\" href=\\\"#\\\" onClick={this.resetTheme}>Default Theme</a>\\n          </div>\\n\\n        </div>\\n\\n      </div>\\n    );\\n\\n  }\\n\\n}\\n\\nexport default ThemeSwitcher;\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import 'bootstrap/dist/css/bootstrap.min.css';\\nimport 'bootstrap/dist/js/bootstrap.min.js';\\n// import $ from 'jquery';\\n// import Popper from 'popper.js';\\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\\n\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './bootstrap';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,t,a){e.exports=a(20)},19:function(e,t,a){},20:function(e,t,a){\"use strict\";a.r(t);a(11),a(12),a(14);var n=a(0),o=a.n(n),r=a(4),s=a.n(r),l=(a(19),a(5)),c=a(6),i=a(8),m=a(7),u=a(9),d=function(e){function t(){var e,a;Object(l.a)(this,t);for(var n=arguments.length,o=new Array(n),r=0;r<n;r++)o[r]=arguments[r];return(a=Object(i.a)(this,(e=Object(m.a)(t)).call.apply(e,[this].concat(o)))).state={theme:null,username:\"\",password:\"\",sex:\"male\",jsonData:\"\"},a.resetTheme=function(e){e.preventDefault(),a.setState({theme:null})},a.chooseTheme=function(e,t){t.preventDefault(),a.setState({theme:e})},a.selectSex=function(e){a.setState({sex:e.target.value})},a}return Object(u.a)(t,e),Object(c.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;console.log(\"Get Json\"),fetch(\"https://jsonplaceholder.typicode.com/todos/1\").then(function(e){return e.json()}).then(function(e){return e.title}).then(function(t){e.setState({jsonData:t})})}},{key:\"render\",value:function(){var e=this,t=this.state.theme,a=t?t.toLowerCase():\"secondary\";return o.a.createElement(\"div\",{className:\"d-flex flex-wrap justify-content-center position-absolute w-100 h-100 align-items-center align-content-center\"},o.a.createElement(\"legend\",{className:\"rainbow-text\"},\"xxxShow JSON : \",this.state.jsonData),o.a.createElement(\"a\",{href:\"www.google.co.th\"},\"Google\"),o.a.createElement(\"div\",{class:\"container\"},o.a.createElement(\"div\",{class:\"row\"},o.a.createElement(\"div\",{class:\"col-lg-12\"},o.a.createElement(\"form\",{action:\"#\",onSubmit:function(){return alert(JSON.stringify(e.state))}},o.a.createElement(\"legend\",null,\"Login\"),o.a.createElement(\"div\",{class:\"form-group\"},o.a.createElement(\"label\",{for:\"\"},\"Username\"),o.a.createElement(\"input\",{onChange:function(t){e.setState({username:t.target.value})},value:this.state.username,type:\"text\",class:\"form-control\",id:\"username\",required:!0})),o.a.createElement(\"div\",{class:\"form-group\"},o.a.createElement(\"label\",{for:\"\"},\"Password\"),o.a.createElement(\"input\",{onChange:function(t){e.setState({password:t.target.value})},value:this.state.password,type:\"password\",class:\"form-control\",id:\"password\",required:!0})),o.a.createElement(\"div\",{class:\"form-group\"},o.a.createElement(\"label\",null,\"Sex\"),o.a.createElement(\"select\",{onChange:this.selectSex,id:\"sex\",class:\"form-control\",required:\"required\"},o.a.createElement(\"option\",{value:\"male\"},\"Male\"),o.a.createElement(\"option\",{value:\"female\"},\"Female\"))),o.a.createElement(\"button\",{type:\"submit\",class:\"btn btn-primary\"},\"Login\"))))),o.a.createElement(\"span\",{className:\"h1 mb-4 w-100 text-center text-\".concat(a)},t||\"Default\"),o.a.createElement(\"div\",{className:\"btn-group\"},o.a.createElement(\"button\",{type:\"button\",className:\"btn btn-\".concat(a,\" btn-lg\")},t||\"Choose\",\" Theme\"),o.a.createElement(\"button\",{type:\"button\",className:\"btn btn-\".concat(a,\" btn-lg dropdown-toggle dropdown-toggle-split\"),\"data-toggle\":\"dropdown\",\"aria-haspopup\":\"true\",\"aria-expanded\":\"false\"},o.a.createElement(\"span\",{className:\"sr-only\"},\"Toggle Theme Dropdown\")),o.a.createElement(\"div\",{className:\"dropdown-menu\"},o.a.createElement(\"a\",{className:\"dropdown-item\",href:\"#\",onClick:function(t){return e.chooseTheme(\"Primary\",t)}},\"Primary Theme\"),o.a.createElement(\"a\",{className:\"dropdown-item\",href:\"#\",onClick:function(t){return e.chooseTheme(\"Danger\",t)}},\"Danger Theme\"),o.a.createElement(\"a\",{class:\"dropdown-item\",href:\"#\",onClick:function(t){return e.chooseTheme(\"Success\",t)}},\"Success Theme\"),o.a.createElement(\"div\",{className:\"dropdown-divider\"}),o.a.createElement(\"a\",{className:\"dropdown-item\",href:\"#\",onClick:this.resetTheme},\"Default Theme\"))))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(o.a.createElement(d,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[10,1,2]]]);","extractedComments":[]}